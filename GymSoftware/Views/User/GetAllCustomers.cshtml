@model CommonUtility.CustomerRegistration
@{
    ViewBag.Title = "GetAllCustomers";
    Layout = "~/Views/Shared/_GymLayout.cshtml";
}
<div class="card">
    @if (ViewBag.cmessage != null && ViewBag.cmessage != "")
    {
        if (ViewBag.renewmsg == "Something went wrong")
        {
            <div class="alert alert-danger">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">&times;</span> </button>
                <h3 class="text-danger"><i class="fa fa-exclamation-circle"></i> Error</h3> @ViewBag.renewmsg
            </div>
        }
        else
        {
            <div class="alert alert-success">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">&times;</span> </button>
                <h3 class="text-success"><i class="fa fa-check-circle"></i> Success</h3> @ViewBag.renewmsg
            </div>
        }
    }
    <div class="card-body">
        <h4 class="card-title">Registered Customers</h4>
        <h6 class="card-subtitle">Can also search or sort by any column</h6>
        <table class="table" id="Cust_Rec">
            <thead class="tableheadcolor">
                <tr>
                    <th>Name</th>
                    <th>Mobile</th>
                    <th>Membership</th>
                    <th>Batch</th>
                    <th>Payment</th>
                    <th>Payment Date</th>
                    <th>Expiry Date</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody class="tbodybgcolor">
                @foreach (var item in Model.UsersList)
                {
                    string sts = DateTime.Now.Date > item.ExpiryDate.Date ? "Expired" : "Active";
                    string stscls = DateTime.Now.Date > item.ExpiryDate.Date ? "label-danger" : "label-success";
                    string cls = item.Outstanding > 0 ? "Editpopup" : "disabled";
                    <tr class="gradeX">
                        <td>@item.Name</td>
                        <td>@item.Mobile</td>
                        <td>@item.MembershipName</td>
                        <td>@item.BatchName</td>
                        <td>@item.Payment</td>
                        <td>@item.DateOfPayment.ToString("dd/MM/yyyy")</td>
                        <td>@item.ExpiryDate.ToString("dd/MM/yyyy")</td>
                        <td><span class="label @stscls">@sts</span></td>
                        <td>
                            @if (sts == "Expired")
                            {
                                <button type="button" class="Editpopup btn btn-default" data-custid="@item.CustomerID" data-name="@item.Name" data-email="@item.Email" data-mobile="@item.Mobile"
                                        data-totpayment="@item.TotalPayment" data-payment="@item.Payment" data-outs="@item.Outstanding">
                                    <i class="fa fa-usd"></i> Renew
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-default @cls" data-custid="@item.CustomerID" data-name="@item.Name" data-email="@item.Email" data-mobile="@item.Mobile"
                                        data-totpayment="@item.TotalPayment" data-payment="@item.Payment" data-outs="@item.Outstanding">
                                    <i class="fa fa-pencil-square-o"></i> Edit
                                </button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div><a href="@Url.Action("ExportToExcel","User")"><button type="submit" class="btn btn-info waves-effect waves-light m-r-10">Export to Excel</button></a></div>


        <div id="Edit-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        @if (Model.Outstanding > 0)
                        {
                            <h4 class="modal-title">Update Payment Details</h4>
                        }
                        else
                        {
                            <h4 class="modal-title"> <i class="fa fa-refresh"></i> Renew Account</h4>
                        }

                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    </div>

                    @using (Html.BeginForm("RenewAccount", "User", FormMethod.Post))
                    {
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label">Name:</label>
                                        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", @placeholder = "Enter Name" })
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Mobile:</label>
                                        @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control", @placeholder = "Enter Mobile" })
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Email:</label>
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Enter Email" })
                                    </div>
                                    <div class="form-group">
                                        <label>Memebership</label>
                                        @Html.DropDownListFor(model => model.MembershipID, ViewBag.Membership as SelectList, "-- Select --", new { @class = "form-control" })
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Batch Tymings</label>
                                        @Html.DropDownListFor(model => model.BatchID, ViewBag.Batchdetails as SelectList, "-- Select --", new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Total Amount:</label>
                                        @Html.TextBoxFor(x => x.TotalPayment, new { @class = "form-control", @placeholder = "Enter Total Amount", @readonly = "readonly" })
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Payment:</label>
                                        @Html.TextBoxFor(x => x.Payment, new { @class = "form-control", @placeholder = "Enter Payment" })
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Outstanding:</label>
                                        @Html.TextBoxFor(x => x.Outstanding, new { @class = "form-control", @placeholder = "Enter Outstanding", @readonly = "readonly" })
                                        @Html.HiddenFor(x => x.CustomerID)
                                    </div>
                                </div>
                            </div>

                            @if (Model.Outstanding > 0)
                            {
                                <button type="button" id="cleardue" class="btn btn-default">Clear Dues</button>
                            }

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Cancel</button>
                            <button type="button" id="btnpopup" class="btn btn-danger waves-effect waves-light">Save changes</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Content/Script/jquery.dataTables.min.js"></script>
<script src="~/Content/Script/bootstrap.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#Cust_Rec').DataTable({
            "bLengthChange": false,
            "pagingType": "full_numbers",
            "order": [],
        });
    });
    $('.Editpopup').click(function () {
        var custid = parseInt($(this).attr('data-custid'));
        var name = $(this).attr('data-name');
        var email = $(this).attr('data-email');
        var mobile = $(this).attr('data-mobile');
        var payment = $(this).attr('data-payment');
        var outstanding = parseInt($(this).attr('data-outs'));
        var totalpayment = parseInt(payment) + parseInt(outstanding);

        $('#CustomerID').val(custid);
        $('#Name').val(name);
        $('#Mobile').val(mobile);
        $('#Email').val(email);
        if (outstanding > 0) {
            $('#TotalPayment').val(totalpayment);
            $('#Payment').val(payment);
            $('#Outstanding').val(outstanding);
        }
        var ost = parseInt(outstanding);
        $('#Edit-modal').modal('show');
    });

    $("#cleardue").click(function () {
        var payment = $('#Payment').val();
        var outstanding = $('#Outstanding').val();
        var finalamt = parseInt(payment) + parseInt(outstanding);
        $('#Payment').val(finalamt);
        $('#Outstanding').val(0);
    });

    $("#MembershipID").change(function () {
        var mid = $(this).val();
        if (mid != '') {
            $.ajax({
                type: "POST",
                url: '@Url.Action("BindPrice", "User")',
                data: { memid: mid },
                dataType: "json",
                success: function (data) {
                    $('#TotalPayment').val(data.price);
                    $('#Outstanding').val(data.price);
                },
                error: function () {
                }
            });
        }
        else {
            $('#TotalPayment').val('');
            $('#Outstanding').val('');
        }

    });

    $('#Payment').change(function () {
        var paymnt = $(this).val();
        var totalpaymnt = $('#TotalPayment').val();
        var amt = "";
        if (paymnt != '') {
            amt = parseInt(totalpaymnt) - parseInt(paymnt);
            $('#Outstanding').val(amt);
        }
        else {
            $('#Outstanding').val(totalpaymnt);
        }
    });

    $('#btnpopup').click(function () {
        debugger;
        var model = {
            "CustomerID": $('#CustomerID').val(),
            "MembershipID": $('#MembershipID').val(),
            "BatchID": $('#BatchID').val(),
            "TotalPayment": $('#TotalPayment').val(),
            "Payment": $('#Payment').val(),
            "Outstanding": $('#Outstanding').val(),
            "renew": true,
        }
        $.ajax({
            url: "@Url.Action("RenewAccount", "User")",
            type: "POST",
            dataType: "json",
            data: model,
            success: function (data) {
                $('#Edit-modal').modal('hide');
                location.reload();
            }
        });
    });

</script>
